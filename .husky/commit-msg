#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Commit message validation for WikiGaiaLab
echo "📝 Validating commit message format..."

# Read commit message
commit_message=$(cat $1)

# Define the regex pattern for conventional commits
pattern="^(feat|fix|docs|style|refactor|test|chore|ci|build|perf)(\(.+\))?: .{1,50}"

# Check if commit message matches the pattern
if [[ ! $commit_message =~ $pattern ]]; then
  echo "❌ Invalid commit message format!"
  echo ""
  echo "📋 Commit message must follow conventional commits format:"
  echo "   <type>[optional scope]: <description>"
  echo ""
  echo "📝 Valid types:"
  echo "   feat:     New feature"
  echo "   fix:      Bug fix"
  echo "   docs:     Documentation changes"
  echo "   style:    Code style changes (formatting, etc.)"
  echo "   refactor: Code refactoring"
  echo "   test:     Adding or modifying tests"
  echo "   chore:    Maintenance tasks"
  echo "   ci:       CI/CD changes"
  echo "   build:    Build system changes"
  echo "   perf:     Performance improvements"
  echo ""
  echo "📖 Examples:"
  echo "   feat: add user authentication"
  echo "   feat(auth): implement Google OAuth"
  echo "   fix: resolve voting button bug"
  echo "   docs: update README setup instructions"
  echo ""
  echo "🔍 Your commit message:"
  echo "   '$commit_message'"
  echo ""
  exit 1
fi

# Check commit message length
if [ ${#commit_message} -gt 72 ]; then
  echo "⚠️  Warning: Commit message is longer than 72 characters (${#commit_message})"
  echo "💡 Consider shortening for better readability"
fi

echo "✅ Commit message format is valid!"